name: Dependency Security Checks

on:
  schedule:
    - cron: '0 0 * * 1' # Run every Monday at midnight
  push:
    branches: [ main ]
    paths:
      - 'package.json'
      - 'package-lock.json'
      - 'supabase/**/*.ts'
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

jobs:
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high
          deny-licenses: 'GPL-3.0, AGPL-3.0'
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
  
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Run npm audit
        run: npm audit --production
        continue-on-error: true
      
      - name: Snyk Security Scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
      
      - name: Upload Snyk Report
        uses: actions/upload-artifact@v3
        with:
          name: snyk-report
          path: snyk-report.json
          if-no-files-found: ignore
  
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    needs: [dependency-review, security-scan]
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Check for Updates
        id: ncu
        run: |
          npm i -g npm-check-updates
          UPDATES=$(ncu --format json)
          echo "::set-output name=has_updates::$(echo $UPDATES | jq 'length > 0')"
          echo $UPDATES > updates.json
      
      - name: Create Pull Request
        if: steps.ncu.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'chore: update dependencies'
          body: |
            This PR updates dependencies to their latest versions.
            
            Updated dependencies:
            ```
            $(cat updates.json | jq -r 'to_entries | map("\(.key): \(.value)") | .[]')
            ```
            
            Please review and test before merging.
          branch: update-dependencies
          base: main
          labels: dependencies, automated pr
  
  deno-lint:
    name: Lint Supabase Functions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      
      - name: Lint Deno Files
        run: |
          cd supabase/functions
          for dir in */; do
            if [ -f "${dir}index.ts" ]; then
              echo "Linting ${dir}index.ts"
              deno lint "${dir}index.ts"
            fi
          done
        continue-on-error: true # Don't fail the workflow, just report issues 